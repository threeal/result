name: test
on:
  workflow_dispatch:
  push:
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3.2.0

      - name: Install LLVM and Ninja
        run: sudo apt install llvm ninja-build

      - name: Configure CMake
        run: cmake . -B build -G Ninja -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DBUILD_TESTING=ON

      - name: Build targets
        run: cmake --build build

      - name: Run unit tests
        id: run_tests
        run: ctest --verbose --test-dir build --no-compress-output -T Test

      - name: Setup Testspace client
        id: setup_testspace
        if: steps.run_tests.outcome == 'success' || steps.run_tests.outcome == 'failure'
        uses: testspace-com/setup-testspace@v1.0.5
        with:
          domain: ${{github.repository_owner}}

      - name: Send test result to Testspace
        if: steps.setup_testspace.outcome == 'success'
        run: testspace [Tests]"build/Testing/*/Test.xml"

      - name: Generate and send code coverage report to Coveralls
        if: steps.run_tests.outcome == 'success' || steps.run_tests.outcome == 'failure'
        uses: threeal/gcovr-action@v0.1.0
        with:
          gcov-executable: llvm-cov gcov
          exclude: build/*
          coveralls-send: true
          coveralls-repo-token: ${{ secrets.COVERALLS_REPO_TOKEN }}

  check-warning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3.2.0

      - name: Install Ninja
        run: sudo apt install ninja-build

      - name: Configure CMake
        run: cmake . -B build -G Ninja -DCMAKE_CXX_FLAGS='-Werror' -DBUILD_TESTING=ON

      - name: Build targets
        run: cmake --build build

  check-warning-msvc:
    runs-on: windows-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3.2.0

      - name: Install Ninja
        run: choco install -y ninja

      - name: Configure CMake
        run: cmake . -B build -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl -DCMAKE_CXX_FLAGS=/WX -DBUILD_TESTING=ON

      - name: Build targets
        run: cmake --build build

  check-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v3.2.0

      - name: Install cmake-format
        run: pip3 install cmake-format

      - name: Configure CMake
        run: cmake . -B build

      - name: Check code formatting
        run: |
          cmake --build build --target format
          cmake --build build --target check-format
